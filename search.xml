<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C语言基础知识]]></title>
    <url>%2F2019%2F03%2F08%2FC%E8%AF%AD%E8%A8%80%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[C语言基础知识:指针:指针变量: 专门用来存放地址的特殊变量 指针 ( = 变量的值) 指针变量 ( = 变量) 含义 地址 存放另一个变量地址的变量 指针与指针变量的关系类似于变量的值与变量的区别. 指针变量习惯上简称为 指针 1234567891011int main()&#123; int a, * p; p = &amp;a; // "&amp;a" 代表a的地址的值 a = 3; printf("p的值为 %d\n", p); // p中存放的是 a 的地址 printf("*p的值为 %d", *p); // * 号在 引用时表示"指向"操作, *p 代表 a, // "*"仅起到标志的作用, 表示该变量为指针变量, 不是变量名的一部分, 及指针变量名不包括 * return 0 ;&#125; 结构体:定义: 将一些已知的数据类型放在一起来定义的一种数据类型 结构体并没有创造出新的数据类型，这点要搞清楚。C语言的结构体和其他高级语言的类有点相似的概念，可以完成对一种事物的抽象。 代码中的定义: 1234567891011121314151617struct 结构名 // 结构名是结构的标识符不是变量名&#123; 类型 变量名; 类型 变量名;&#125; 结构变量;// 例子:struct student &#123; char name[8]; int age; char sex[2]; char depart[20]; float wage1, wage2, wage3, wage4, wage5; &#125; Mike, Marry;struct student John; // struct student:类型说明符, John 变量名// 定义了两个 struct student 类型的变量 Mike, Marry typedef: 使用 typedef 关键字来定义自己习惯的数据类型名称，来替代系统默认的基本类型名称、数组类型名称、指针类型名称与用户自定义的结构型名称、共用型名称、枚举型名称等。 eg: 结构体12345678910// 以结构体为例，下面我们定义一个名为 Point 的结构体struct Point&#123; double x; double y; double z;&#125;;// 在调用这个结构体时，我们必须像下面的代码这样来调用这个结构体struct Point oPoint1 = &#123;100，100，0&#125;;struct Point oPoint2; 现在，我们利用 typedef 定义这个结构体123456typedef struct tagPoint&#123; double x; double y; double z;&#125; Point; 上面的代码中，实际上完成了两个操作123456789101112131415// 1.定义了一个新的结构类型struct tagPoint&#123; double x; double y; double z; //struct 关键字和 tagPoint 一起构成了这个结构类型，无论是否存在 typedef 关键字，这个结构 都存在&#125;;// 2.使用 typedef 为这个新的结构起了一个别名，叫 Pointtypedef struct tagPoint Point//现在你就可以像 int 和 double 那样直接使用 Point 定义变量Point oPoint1 = &#123;100，100，0&#125;;Point oPoint2; 参考文章: typedef的用法，C语言typedef详解]]></content>
      <categories>
        <category>C语言</category>
        <category>基础知识</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构 线性表]]></title>
    <url>%2F2019%2F03%2F08%2F%E7%BA%BF%E6%80%A7%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[线性表：定义:​ 由 n(n≥0) 个数据特性相同的元素构成的 有限序列 特点: 存在唯一的一个被称为”第一个”的数据元素 存在唯一的一个被称为”最后一个”的数据元素 除第一个之外, 结构中的每个数据元素均只有一个前驱元素 除最后一个之外, 结构中的每个数据元素均只有一个后继元素 存储结构及运算: 存储结构方式: 顺序存储方式(顺序表), 链接存储方式(链表) 运算: 线性表的初始化 求表的长度 取出表的元素 查找运算 随笔: 线性表中的数据元素之间的逻辑关系就是其相互位置上的 邻接关系 ,该关系是线性的,因此,线性表是一种线性结构 常见例子: 学生成绩表, 列车时刻表, 英文字母表 顺序表特点:​ 逻辑关系相邻的两个结点在 物理位置 上也相邻, 结点的逻辑次序和物理次序一致 实现方式:​ 数组 基本操作的实现: 初始化 1234Status InitList(SqList &amp;L)&#123; L.elem = new&#125; ​]]></content>
      <categories>
        <category>数据结构</category>
        <category>线性表</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[陈果老师语录]]></title>
    <url>%2F2019%2F03%2F07%2F%E8%87%AA%E6%88%91%E6%88%90%E9%95%BF%20%E9%99%88%E6%9E%9C%2F</url>
    <content type="text"><![CDATA[只有心灵才能洞察一切，世界上真正重要的东西要用心去看 你使用什么样的双眼观世界，就印证了你有怎样的心眼，如果心眼大，你所见的世界宽广无边，如果你心眼小，充满羡慕嫉妒恨，所见的世界也是偏狭丑陋 选择之所以称之为选择，一定是痛苦的，因为选项是不相上下的，能轻松做决定的，都不叫选择，选择意味着舍弃一种美好，承受一种痛苦，不安]]></content>
      <categories>
        <category>感悟</category>
        <category>陈果老师</category>
      </categories>
      <tags>
        <tag>感悟</tag>
        <tag>人生方向</tag>
        <tag>智慧</tag>
        <tag>成长</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[涂磊老师语录]]></title>
    <url>%2F2019%2F03%2F07%2F%E8%87%AA%E6%88%91%E6%88%90%E9%95%BF%20%E6%B6%82%E7%A3%8A%2F</url>
    <content type="text"><![CDATA[我们总是善于去伤害那些爱我们的人， 因为我们根本伤害不了那些不爱我们的人;我们总是甘愿被那些我们爱的人伤害，那是因为我爱他们 喜欢可以心动，而爱一定会心痛；喜欢可以舍得，但爱一定舍不得；喜欢一个人，冬天不过是冬天，不过是漂亮一点而已；但是爱一个人，冬天可以变成春天；爱一个人，她落泪你就会跟着她一起落泪；而喜欢一个人，她落泪你只不过是安慰；喜欢是可以变成爱的，但如果爱了就说不出喜欢；喜欢是不排她的，而爱一定是排她的，唯一的；喜欢与责任无关，而爱一定要负责任，这就是喜欢和爱的区别 春风得意的浪子回头最珍贵，穷途末路的认错悔改最虚伪 你曾经买了一件很喜欢的衣裳却舍不得穿，郑重地供奉在衣柜里；许久之后，当你再看见它的时候，却发现它已经过时了。所以，你就这样与它错过了。你也曾经买了一块漂亮的蛋糕却舍不得吃，郑重地供奉在冰箱里；许久之后，当你再看见它的时候，却发现它已经过期了。所以，你也这样与它错过了。没有在最喜欢的时候上身的衣裳，没有在最可口的时候品尝的蛋糕，就像没有在最想做的时候去做的事情，都是遗憾。生命也有保存期限，想做的事该趁早去做。如果你只是把你的心愿郑重地供奉在心里，却未曾去实行，那么唯一的结果，就是与它错过，一如那件过时的衣裳，一如那块过期的蛋糕 有些人注定是你生命中的过客，却总是成为你记忆中的常客，但永远也仅止于做客 你以为责任是什么？你以为责任就是终身相守，扔几个钱在家里。真正的责任是要在乎你所爱的人的每一分每一秒的感受 男人无事献殷勤非奸即盗，女人对爱来者不拒不是欺就是爱 人最伟大的力量不是创造，而是自省！如果不能自我反省，不能看到自身的错误和不足，即使有非凡的力量，创造出的一切都只是埋没自己的坟墓！ 越是嘴上说自己有原则的人，越是圆滑，因为他们的原则便是永远不说负责任的话，永远模棱两可！狡猾的眼神中永远透露的是欺骗，向下的嘴角代表的永远是严肃。 在我看来，绝大多数现代人的虚荣来自于虚伪，虚伪来自于自卑！在日常生活中衣着光鲜、牛逼哄哄的家伙其实内心很恐慌！]]></content>
      <categories>
        <category>感悟</category>
        <category>涂磊老师</category>
      </categories>
      <tags>
        <tag>感悟</tag>
        <tag>人生方向</tag>
        <tag>智慧</tag>
        <tag>成长</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 常用命令]]></title>
    <url>%2F2019%2F03%2F07%2FHexo%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[1. 写文章 写文章 你可以执行下列命令来创建一篇新文章。 hexo new #新建文章，可以改成中文的，如“新文章”，如果标题包含空格的话，请使用引号括起来。 删除文章 先删除目标文章，然后重新运行 hexo clean # 清除缓存文件 (db.json) 和已生成的静态文件 (public) hexo g -d # 文件生成后立即部署网站 写完文章后，你可以使用 hexo g # 全称hexo generate , 生成静态文件（generate：产生） hexo s # 全称hexo server , 启动服务器，默认情况下，访问网址为http://localhost:4000/在本地预览效果 hexo d # 全称hexo deploy, 部署网站，同步到github上（deploy：部署） 2. 分类和标签 Front-matter 是文件最上方以 --- 分隔的区域，用于指定个别文件的变量，举例来说： 12title: Hello Worlddate: 2013/7/13 20:46:25 以下是预先定义的参数，您可在模板中使用这些参数值并加以利用 参数 描述 默认值 layout 布局 title 标题 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章网址 分类和标签 只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。 123456categories:- Diarytags:- PS3- Games# 会使分类Games成为PS3的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类]]></content>
      <categories>
        <category>hexo</category>
        <category>基本操作</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>写作常用命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java面试经典题目（1-6题）]]></title>
    <url>%2F2019%2F03%2F07%2Fjava%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%85%B8%E9%A2%98%E7%9B%AE%EF%BC%881-6%E9%A2%98%EF%BC%89%2F</url>
    <content type="text"><![CDATA[1.什么是Java虚拟机？为什么Java被称作是“平台无关的编程语言”？答案： 运行原理：java源程序经过javac 编译器编译成二进制的xx.class 字节码文件, xx.class 在jvm（各平台装有不同的jvm）上运行，java解释器（jvm的一部分）会将相同的字节码解释成对应平台的机器码，进而执行。 知识： 一份 xx.class 文件(不会变化）被 不同的jvm 解释成 相对应的机器码 机器码: 依附于硬件，根本不存在跨平台行，不同型号的CPU给相同的指令（eg：10011110）,解析成不同的结果 题外知识： JDK (Java Development Kit): Java开发工具包，针对于Java开发员的产品，JDK是整个Java的核心，包括了JRE, Java工具（javac【编译java源码的编译器】，java程序调试和分析的工具）和Java基础的类库（即Java API) JRE (Java runtime environment)：Java运行环境 ,针对于使用Java程序的用户，java程序运行做需要的软件环境，不是一个开发环境, 包含jvm，java基础类库, 不包含任何开发工具（如编译器和调试器）。 JVM (Java Virtual Machine): Java虚拟机，实现java跨平台的最核心的部分，JVM屏蔽了与具体操作系统平台相关的信息，使得Java程序只需生成在Java虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行 2.JDK和JRE的区别是什么？答案： 详细区别见第一题 如果需要运行Java程序，只需要安装JRE（JRE根据不同操作系统有很多不同的版本） 如果需要编写Java程序，需要安装JDK 补充知识： JRE和JVM的区别是什么？ JRE包括JVM和lib（Jvm所需要的类库），JRE里有运行xx.class 的java.exe 只有JVM还不能成class的执行，因为在解释class的时候JVM需要调用解释所需要的类库lib，而jre包含lib类库 时间：2019.3.7]]></content>
      <categories>
        <category>java</category>
        <category>java面试经典题目</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础知识</tag>
        <tag>java面试经典题目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人间词话]]></title>
    <url>%2F2019%2F03%2F06%2F%E4%BA%BA%E9%97%B4%E5%80%BC%E5%BE%97%2F</url>
    <content type="text"><![CDATA[现代诗 酒入豪肠，七分酿成了月光，余下的三分啸成剑气，绣口一吐，就半个盛唐。]]></content>
      <tags>
        <tag>现代诗</tag>
        <tag>诗句</tag>
        <tag>美</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[曾仕强教授语录]]></title>
    <url>%2F2019%2F01%2F10%2F%E8%87%AA%E6%88%91%E6%88%90%E9%95%BF%20%E6%9B%BE%E4%BB%95%E5%BC%BA%2F</url>
    <content type="text"><![CDATA[很多事情，从不同的角度看，才能体会到其中的奥妙 做一个领导者，一定要充分了解下属的特性是什么，及时的下达合理的命令，而且效果要非常的良好，此为将才 事事都透露着一个人的能力 顾全大局，大局的前提底下，很多细小的事情，不用太过于考虑 一件事，从不同的角度看，都有道理，怎么讲都对，不是对不对的事，是价值观的体现 得意勿忘形，人在得意时，千万不能忘形，做事情随他爱怎样怎样，变为得意忘形，当一个人处于逆境的时候，他还会谨慎一点，当一个人处顺境的时候，他就开始沉不住气 形势比人强 人生的理想在于不断提升自己的层次 有智慧没知识容易陷入空想，一事无成。有知识没智慧，就不要埋怨被人当做工具使用，用毕即弃。要善用智慧来运用知识，以求合理的表现 处逆境容易，正因留意，处顺境很难，正因大意 你要很谨慎地去保留你独特的地方，这个独特之处就是你之所以为人的地方。能够自我成全，才是人最伟大的地方]]></content>
      <categories>
        <category>感悟</category>
        <category>曾仕强教授</category>
      </categories>
      <tags>
        <tag>感悟</tag>
        <tag>人生方向</tag>
        <tag>智慧</tag>
        <tag>成长</tag>
      </tags>
  </entry>
</search>
